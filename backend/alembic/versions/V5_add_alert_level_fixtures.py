"""add alert level fixtures

Revision ID: V5
Revises: V4
Create Date: 2024-01-29 11:38:30.304621

"""
import logging
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from src.v1.models import model

LOGGER = logging.getLogger(__name__)

# revision identifiers, used by Alembic.
revision: str = "V5"
down_revision: Union[str, None] = "V4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

alert_levels = [
    model.Alert_Levels(alert_level="High Streamflow Advisory"),
    model.Alert_Levels(alert_level="Flood Watch"),
    model.Alert_Levels(alert_level="Flood Warning"),
]


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = sqlmodel.Session(bind=bind)

    for alert_level in alert_levels:
        LOGGER.debug(f"adding alert_level: {alert_level}")
        session.add(alert_level)

    session.commit()
    session.close()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = sqlmodel.Session(bind=bind)

    for alert_level in alert_levels:
        stmt = sqlmodel.select(model.Alert_Levels).where(  # noqa: F405
            model.Alert_Levels.alert_level == alert_level.alert_level
        )
        results = session.exec(stmt)
        print("results: ", results.all())
        if results.all():
            alert_level_result = results.one()
            session.delete(alert_level_result)

    session.commit()
    session.close()

    # ### end Alembic commands ###
