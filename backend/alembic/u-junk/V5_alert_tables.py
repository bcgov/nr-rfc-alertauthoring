"""migration message

Revision ID: V4
Revises: V3
Create Date: 2024-01-30 17:09:02.177727

"""
from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "V5"
down_revision: Union[str, None] = "V4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # connection = op.get_bind()
    # op.add_column(
    #     "basins", sa.Column("basin_id", sa.Integer(), nullable=False), schema="py_api"
    # )
    # op.drop_column("basins", "id", schema="py_api")

    op.create_table(
        "alert_levels",
        sa.Column("alert_level_id", sa.Integer(), nullable=False),
        sa.Column("alert_level", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("alert_level_id"),
        schema="py_api",
    )
    op.create_table(
        "alerts",
        sa.Column(
            "alert_description", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "alert_hydro_conditions", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column(
            "alert_meteorological_conditions",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=False,
        ),
        sa.Column("alert_created", sa.DateTime(), nullable=False),
        sa.Column("alert_updated", sa.DateTime(), nullable=False),
        sa.Column("author_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("alert_status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("alert_id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("alert_id"),
        schema="py_api",
    )
    op.create_table(
        "cap_event",
        sa.Column("alert_id", sa.Integer(), nullable=False),
        sa.Column("alert_level_id", sa.Integer(), nullable=False),
        sa.Column(
            "cap_event_status", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("cap_event_created_date", sa.DateTime(), nullable=False),
        sa.Column("cap_event_updated_date", sa.DateTime(), nullable=False),
        sa.Column("cap_event_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["alert_id"],
            ["py_api.alerts.alert_id"],
        ),
        sa.ForeignKeyConstraint(
            ["alert_level_id"],
            ["py_api.alert_levels.alert_level_id"],
        ),
        sa.PrimaryKeyConstraint("cap_event_id"),
        schema="py_api",
    )
    op.create_table(
        "cap_event_areas",
        sa.Column("cap_event_area_id", sa.Integer(), nullable=False),
        sa.Column("basin_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["basin_id"],
            ["py_api.basins.basin_id"],
        ),
        sa.PrimaryKeyConstraint("cap_event_area_id"),
    )
    op.create_table(
        "alert_areas",
        sa.Column("alert_area_id", sa.Integer(), nullable=False),
        sa.Column("alert_id", sa.Integer(), nullable=False),
        sa.Column("basin_id", sa.Integer(), nullable=False),
        sa.Column("alert_level_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["alert_id"],
            ["py_api.alerts.alert_id"],
        ),
        sa.ForeignKeyConstraint(
            ["alert_level_id"],
            ["py_api.alert_levels.alert_level_id"],
        ),
        sa.ForeignKeyConstraint(
            ["basin_id"],
            ["py_api.basins.basin_id"],
        ),
        sa.PrimaryKeyConstraint("alert_area_id"),
        schema="py_api",
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.add_column(
    #     "basins",
    #     sa.Column(
    #         "id",
    #         sa.INTEGER(),
    #         server_default=sa.text("nextval('py_api.basins_id_seq'::regclass)"),
    #         autoincrement=True,
    #         nullable=False,
    #     ),
    #     schema="py_api",
    # )
    # op.drop_column("basins", "basin_id", schema="py_api")
    op.drop_table("alert_areas", schema="py_api")
    op.drop_table("cap_event_areas")
    op.drop_table("cap_event", schema="py_api")
    op.drop_table("alerts", schema="py_api")
    op.drop_table("alert_levels", schema="py_api")

    # connection = op.get_bind()

    # ### end Alembic commands ###
