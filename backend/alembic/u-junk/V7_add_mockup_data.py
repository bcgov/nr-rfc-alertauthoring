"""add mockup data

Revision ID: V6
Revises: V5
Create Date: 2024-01-29 12:28:16.951414

"""
import datetime
import logging
from typing import List, Sequence, Union

import sqlalchemy as sa
import sqlmodel
from alembic import op
from src.v1.models import model

LOGGER = logging.getLogger(__name__)

# revision identifiers, used by Alembic.
revision: str = "V7"
down_revision: Union[str, None] = "V6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # rename id to alert_id
    bind = op.get_bind()
    session = sqlmodel.Session(bind=bind)

    basin_1_select = sqlmodel.select(model.Basins).where(
        model.Basins.basin_name == "Haida Gwaii"
    )
    basin_1 = session.exec(basin_1_select).one()
    LOGGER.debug(f"basin_1: {basin_1}")

    alert_level_select = sqlmodel.select(model.Alert_Levels).where(
        model.Alert_Levels.alert_level == "High Streamflow Advisory"
    )
    # alert_level = session.exec(alert_level_select).one()
    # LOGGER.debug(f"alert_level: {alert_level}")

    alert_data_1 = model.Alerts(
        alert_description="Alert Description 1",
        alert_hydro_conditions="Alert Hydro Conditions 1",
        alert_meteorological_conditions="Alert Meteorological Conditions 1",
        author_name="Rocky B.",
        alert_status="active",
        basins=[basin_1],
        # alert_levels=[alert_level],
        # basin_id=basin_1.basin_id,
        # alert_level_id=alert_level.alert_level_id,
    )
    # session.add(alert_data_1)
    # session.commit()
    session.add(alert_data_1)

    LOGGER.debug(f"alert_data_1 added: {alert_data_1}")

    # area_alert_data_1 = model.Alert_Areas(
    #     alert_area="Alert Area 1",
    #     alert_level_id=alert_level.alert_level_id,
    #     basin_id=basin_1.basin_id,
    #     alert_id=alert_data_1,
    # )
    # session.add(area_alert_data_1)
    session.commit()

    # basin_data_1 = model.Basins(basin_name='Haida Gwaii')

    # area_alert_data_1 = model.Alert_Areas(
    #     alert_area="Alert Area 1",
    #     alert_level_id=1,
    #     basin_id=81,
    #     alert_id=alert_data_1,
    # )

    # session.add(alert_data_1)
    # session.commit()
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    bind = op.get_bind()
    session = sqlmodel.Session(bind=bind)

    sql = "DELETE FROM py_api.alerts WHERE alert_description is not null;"
    op.execute(sql)
    sql = "DELETE FROM py_api.alert_areas WHERE alert_area_id is not null;"
    op.execute(sql)

    pass
    # ### end Alembic commands ###
